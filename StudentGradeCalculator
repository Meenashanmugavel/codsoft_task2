import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.DecimalFormat;

public class StudentGradeCalculator extends JFrame {

    private JTextField[] marksFields;
    private JLabel totalMarksLabel;
    private JLabel averagePercentageLabel;
    private JLabel gradeLabel;

    public StudentGradeCalculator() {
        setTitle("Student Grade Calculator");
        setSize(400, 300);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        setLocationRelativeTo(null);

        JPanel panel = new JPanel();
        panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));

        // Create labels and text fields for subjects
        marksFields = new JTextField[5];
        for (int i = 0; i < 5; i++) {
            JLabel subjectLabel = new JLabel("Subject " + (i + 1) + ":");
            marksFields[i] = new JTextField(10);
            panel.add(subjectLabel);
            panel.add(marksFields[i]);
        }

        JButton calculateButton = new JButton("Calculate");
        panel.add(calculateButton);

        // Create labels to display results
        totalMarksLabel = new JLabel("Total Marks: ");
        averagePercentageLabel = new JLabel("Average Percentage: ");
        gradeLabel = new JLabel("Grade: ");
        panel.add(totalMarksLabel);
        panel.add(averagePercentageLabel);
        panel.add(gradeLabel);

        // Add action listener to calculate button
        calculateButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                calculateGrade();
            }
        });

        add(panel);
        setVisible(true);
    }

    private void calculateGrade() {
        int totalMarks = 0;
        int numOfSubjects = 0;

        Student student = new Student();
        for (int i = 0; i < 5; i++) {
            String marksText = marksFields[i].getText();
            if (!marksText.isEmpty()) {
                try {
                    int marks = Integer.parseInt(marksText);
                    Subject subject = new Subject("Subject " + (i + 1), marks);
                    student.addSubject(subject);
                    totalMarks += marks;
                    numOfSubjects++;
                } catch (NumberFormatException ex) {
                    JOptionPane.showMessageDialog(this, "Invalid input for marks in Subject " + (i + 1));
                    return;
                }
            }
        }

        if (numOfSubjects == 0) {
            JOptionPane.showMessageDialog(this, "Please enter marks for at least one subject.");
            return;
        }

        double averagePercentage = (double) totalMarks / numOfSubjects;
        String grade = calculateGradeFromPercentage(averagePercentage);

        DecimalFormat df = new DecimalFormat("#.##");

        totalMarksLabel.setText("Total Marks: " + totalMarks);
        averagePercentageLabel.setText("Average Percentage: " + df.format(averagePercentage) + "%");
        gradeLabel.setText("Grade: " + grade);
    }

    private String calculateGradeFromPercentage(double percentage) {
        if (percentage >= 90) {
            return "A+";
        } else if (percentage >= 80) {
            return "A";
        } else if (percentage >= 70) {
            return "B+";
        } else if (percentage >= 60) {
            return "B";
        } else if (percentage >= 50) {
            return "C";
        } else if (percentage >= 40) {
            return "D";
        } else {
            return "Fail";
        }
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                new StudentGradeCalculator();
            }
        });
    }
}
